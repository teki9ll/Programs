
#include <iostream>

using namespace std;

class Node
{
    public:
    int data;
    Node* next;
    
    Node(int data)
    {
        this->data = data;
        this->next = NULL;
    }
};

class Stack
{
    public:
    Node* root = NULL;
    Node* top = NULL;  
    
    void push(int data)
    {
        Node* newNode = new Node(data);
        
        if(root == NULL)
        {
            root = newNode;
            top = newNode;
        }
        else
        {
            top->next = newNode;
            top = newNode;
        }
    }
    
    void pop()
    {
        if(root == NULL)
        {
            cout<<"Stack is Empty\n";
        }
        else
        {
            Node* temp = root;
            
            if(temp->next == NULL)
            {
                cout<<"ONLY ONE ELEMENT\n";
                free(temp);
                root = NULL;
                top = NULL;
            }
            else
            {
                while(temp->next != top)
                {
                    temp = temp->next;
                } 
                top = temp;
                free(temp->next);
                temp->next = NULL;
            }
        }
    }
    
    void print()
    {
        if(root == NULL)
        {
            cout<<"Stack is Empty\n";
        }
        else
        {
            Node* temp = root;
            while(temp != NULL)
            {
                cout<<temp->data<<" ";
                temp = temp->next;
            }
            cout<<endl;
        }
    }
};

int main()
{
    Stack st;
    st.print();
    
    st.push(10);
    st.push(20);
  
    st.print();
    
    st.pop();
    st.pop();
    
    st.print();
    
    st.push(100);
    st.push(200);
    st.push(300);
    st.push(400);
    st.push(500);
    st.push(600);
    st.push(700);
    
    st.print();
    
    st.pop();
    st.pop();
    st.pop();
    
    st.print();
    return 0;
}
